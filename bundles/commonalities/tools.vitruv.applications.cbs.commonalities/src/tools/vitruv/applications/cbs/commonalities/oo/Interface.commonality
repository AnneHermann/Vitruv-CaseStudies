import tools.vitruv.applications.cbs.commonalities.util.java.operators.attribute.JavaCompilationUnitNameOperator

concept ObjectOrientedDesign

// Optionally externally contained by ObjectOrientedDesign:Package.interfaces
commonality Interface {

	// Optionally externally contained by UML:Package.packagedElement
	with UML:(Interface, single Model, Resource)
	whereat {
		Interface in Model,
		Model in Resource,
		// TODO Use a condition operator to ask the user for the model name and path
		// TODO Duplication with specification in ObjectOrientedDesign:Package
		Model.name = "model",
		Resource.path = "model/",
		Resource.name = "model",
		Resource.fileExtension = "uml"
	}

	// Optionally externally contained by Java:Package.javaPackageCompilationUnits
	// Note: We only support one classifier per compilation unit currently. Supporting multiple classifiers would
	// require use to have a separate commonality to represent the CompilationUnit.
	with Java:(Interface, CompilationUnit, Resource)
	whereat {
		Interface in CompilationUnit.classifiers,
		CompilationUnit in Resource,
		Resource.path = "src/",
		Resource.fileExtension = "java"
	}

	has name {
		= UML:Interface.name

		= Java:Interface.name
		// CompilationUnit name schema: '<dot-separated-namespaces>.<name>.java'
		-> javaCompilationUnitName(Java:CompilationUnit.name, Java:CompilationUnit)
		-> Java:Resource.name
	}

	// TODO methods
	// TODO super types
	// TODO (minor) static final fields
}
