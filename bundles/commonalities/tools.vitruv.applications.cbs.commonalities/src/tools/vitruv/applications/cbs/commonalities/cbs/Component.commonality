import tools.vitruv.applications.cbs.commonalities.util.common.operators.attribute.FirstUpperOperator
import tools.vitruv.applications.cbs.commonalities.util.common.operators.attribute.PrefixOperator

import tools.vitruv.applications.cbs.commonalities.util.oo.operators.attribute.OOTypeReferencesOperator

import tools.vitruv.applications.cbs.commonalities.util.pcm.operators.attribute.PcmProvidedRolesOperator

concept ComponentBasedDesign

// Externally contained by ComponentBasedDesign:Repository.components
referenced commonality Component {

	// Externally contained by PCM:Repository.components__Repository
	with PCM:BasicComponent

	// Contained by ObjectOrientedDesign:RepositoryPackage.subPackages
	with ObjectOrientedDesign:(
		Package called "ComponentPackage",
		Class called "ComponentClass"
	)
	whereat {
		ComponentClass in ComponentPackage.classes,
		ComponentClass.visibility = "PUBLIC"
	}

	has name {
		= PCM:BasicComponent.entityName

		= firstUpper(ObjectOrientedDesign:ComponentPackage.name)
		= prefix(ObjectOrientedDesign:ComponentClass.name, "Impl")
	}

	has providedRoles {
		// TODO We do not react to changes of the interfaces provided by these ProvidedRoles currently.
		= pcmProvidedRoles(PCM:BasicComponent.providedRoles_InterfaceProvidingEntity, "ComponentBasedDesign")

		= ooTypeReferences(ObjectOrientedDesign:ComponentClass.implementedInterfaces, "ComponentBasedDesign")
	}

	// TODO requiredRoles
}
