concept ComponentBasedSystems

commonality Repository {

	with PCM:(Repository in Resource)
	whereat {
		-> Resource.path = "model/",
		Resource.fileExtension = "repository"
	}

	with ObjectOrientedDesign:(
		Package called "RepositoryPackage",
		Package called "ContractsPackage",
		Package called "DatatypesPackage"
	)
	whereat {
		ContractsPackage in RepositoryPackage,
		ContractsPackage.name = "contracts",

		DatatypesPackage in RepositoryPackage,
		DatatypesPackage.name = "datatypes"
	}

	has name {
		= PCM:Repository.entityName
		-> PCM:Resource.name

		= ObjectOrientedDesign:RepositoryPackage.name
	}

	has components referencing ComponentBasedSystems:Component {
		= PCM:Repository.components__Repository

		// TODO ignore contracts and datatypes packages
		= ObjectOrientedDesign:RepositoryPackage.subPackages
	}

	has componentInterfaces referencing ComponentBasedSystems:ComponentInterface {
		= PCM:Repository.interfaces__Repository

		= ObjectOrientedDesign:ContractsPackage.interfaces
	}

	has compositeDataTypes referencing ComponentBasedSystems:CompositeDataType {
		= PCM:Repository.dataTypes__Repository

		= ObjectOrientedDesign:DatatypesPackage.classes
	}
}
