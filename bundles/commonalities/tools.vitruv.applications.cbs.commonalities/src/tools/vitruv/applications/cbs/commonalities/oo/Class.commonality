import tools.vitruv.applications.cbs.commonalities.util.java.operators.attribute.JavaCompilationUnitNameOperator
import tools.vitruv.applications.cbs.commonalities.util.java.operators.attribute.JavaVisibilityOperator

import tools.vitruv.applications.cbs.commonalities.util.uml.operators.attribute.UmlVisibilityOperator

concept ObjectOrientedDesign

// Optionally externally contained by ObjectOrientedDesign:Package.classes
commonality Class {

	// Optionally externally contained by UML:Package.packagedElement
	with UML:(Class, single Model, Resource)
	whereat {
		Class in Model,
		Model in Resource,
		// TODO Use a condition operator to ask the user for the model name and path
		// TODO Duplication with specification in ObjectOrientedDesign:Package
		Model.name = "model",
		Resource.path = "model/",
		Resource.name = "model",
		Resource.fileExtension = "uml"
	}

	// Optionally externally contained by Java:Package.javaPackageCompilationUnits
	// Note: We only support one classifier per compilation unit currently. Supporting multiple classifiers would
	// require use to have a separate commonality to represent the CompilationUnit.
	with Java:(Class, CompilationUnit, Resource)
	whereat {
		Class in CompilationUnit.classifiers,
		CompilationUnit in Resource,
		Resource.path = "src/",
		Resource.fileExtension = "java"
	}

	has name {
		= UML:Class.name

		= Java:Class.name
		// CompilationUnit name schema: '<dot-separated-namespaces>.<name>.java'
		-> javaCompilationUnitName(Java:CompilationUnit.name, Java:CompilationUnit)
		-> Java:Resource.name
	}

	has visibility {
		= umlVisibility(UML:Class.visibility)

		= javaVisibility(Java:Class.annotationsAndModifiers, Java:Class)
	}

	// TODO final, abstract, static modifiers
	// TODO methods
	// TODO properties
	// TODO super types
}
