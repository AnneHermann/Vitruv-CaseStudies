import static tools.vitruv.applications.umljava.util.JavaUtil.*;
import static tools.vitruv.applications.umljava.util.UmlUtil.*;
import static tools.vitruv.applications.umljava.java2uml.JavaToUmlHelper.*;
import "http://www.eclipse.org/uml2/5.0.0/UML" as uml
import "http://www.emftext.org/java" as java

reactions: JavaToUmlAttribute
in reaction to changes in java
execute actions in uml

reaction JavaAttributeCreated {
    after element java::Field created and inserted in java::Class[members]
    call {
        createUmlAttribute(affectedEObject, newValue)
        
        }
}

routine createUmlAttribute(java::Class jClass, java::Field jAttr) {
    match {
        val uClass = retrieve uml::Class corresponding to jClass
    }
    action {
        val uAttr = create uml::Property and initialize {
            uAttr.name = jAttr.name;
        }
        add correspondence between uAttr and jAttr
        update uClass {
            uClass.ownedAttributes += uAttr;
        }
    }
}

reaction JavaAttributeTypeChanged {
    after element java::TypeReference replaced at java::Field[typeReference]
    call {
        changeUmlAttributeType(affectedEObject, newValue)
        }
}

routine changeUmlAttributeType(java::Field jAttr, java::TypeReference jType) {
    match {
        val uAttr = retrieve uml::Property corresponding to jAttr
        val customType = retrieve optional uml::Class corresponding to getClassifierFromTypeReference(jType)
    }
    action {
        update uAttr {
            uAttr.type = getUmlType(jType, customType, getUmlModel(correspondenceModel, userInteracting))
        }
    }
}

reaction JavaAttributeMadeFinal {
    after element java::Final created and inserted in java::Field[annotationsAndModifiers]
    call setUmlAttributeFinal(affectedEObject, true)
}

reaction JavaAttributeMadeNonFinal {
    after element java::Final deleted and removed from java::Field[annotationsAndModifiers]
    call setUmlAttributeFinal(affectedEObject, false)
}

routine setUmlAttributeFinal(java::Field jAttr, Boolean isFinal) {
    match {
        val uAttr = retrieve uml::Property corresponding to jAttr 
    }
    action {
        update uAttr {
            uAttr.isReadOnly = isFinal
        }
    }
}